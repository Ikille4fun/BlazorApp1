@page "/account/login"
@using System.Net
@using System.IO

@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject HttpClient HttpClient

@inject NavigationManager NavigationManager
@inject IAlertService AlertService

<div class="card">
    <h1 class="card-header">Login</h1>
    <div class="card-body">
        <EditForm Model="@_loginData" OnSubmit="CLogin">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="username">Username:</label>
                <InputText @bind-Value="_loginData.Username" class="form-control" placeholder="Enter username" />
                <ValidationMessage For="@(() => _loginData.Username)" />
            </div>
            <div class="form-group">
                <label for="pwd">Password:</label>
                <InputText @bind-Value="_loginData.Password" class="form-control" placeholder="Enter password" type="password" />
                <ValidationMessage For="@(() => _loginData.Password)" />
            </div>
            <button disabled="@loading" class="btn btn-primary" type="submit">
                @*@if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }*@
                Login
            </button>
            <button class="btn btn-primary" @onclick="Close">Close</button>
        </EditForm>
    </div>
</div>

@code {

    private LoginData _loginData = new LoginData();

    private bool loading;

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task CLogin()
    {
        // reset alerts on login
        AlertService.Clear();

        //loading = true;

        try
        {
            // Http call to local backend
            var verifiedSession = await HttpClient.PostAsJsonAsync("/api/login/login", _loginData);

            Console.WriteLine("What dos it contain: " + verifiedSession);

            // if login == Ok then route to NoteList
            if (verifiedSession.StatusCode == HttpStatusCode.OK)
            {
                // Save username, password and verifiedSession in sessionStorage
                await sessionStorage.SetItemAsync("Username", _loginData.Username);

                /* only use in demo/testing, password is save in plain text!!!! */
                await sessionStorage.SetItemAsync("Password", _loginData.Password);

                StreamReader reader = new StreamReader(verifiedSession.Content.ReadAsStream());

                string temp3 = reader.ReadToEnd();

                await sessionStorage.SetItemAsync("VerifiedSession", temp3);

                // Route to NoteList side
                NavigationManager.NavigateTo("Lists/notelist");
            }
            // else { something }
        }
        catch (Exception e)
        {
            AlertService.Error(e.Message);
            loading = false;
            StateHasChanged();

            //Console.WriteLine("MMLogin.razor" + e);
            //throw;
        }
    }

    private async Task Close()
    {

    }
}