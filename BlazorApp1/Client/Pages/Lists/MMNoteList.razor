@page "/lists/notelist"
@using BlazorApp1.Shared.Components.Models.NoteList
@using System.Text.Json
@using BlazorApp1.Client.Components.Models
@using BlazorApp1.Shared.Components.Models
@using Microsoft.Net.Http.Headers
@using System.IO

@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<h3>NoteList</h3>

<div class="container mx-auto my-3 bg-dark text-white" style="width:550px">

    @* Headline *@
    <div class="row">
        <div class="col-1">
            <img src="/Pictures/micIcon.png" class="rounded float-left; my-2" style="width: 30px; height: 30px" />
        </div>
        <div class="col">
            <h1>AudioNote</h1>
        </div>
        <div class="col">
            <p class="pt-3">title</p>
        </div>
        <div class="col">
            <p class="pt-3">@_loginData.Username</p>
        </div>
    </div>

    @* Body *@
    <div>

        @if (_noteListDatas == null)
        {
            <p>
                <em>
                    Loading...
                </em>
            </p>
        }
        else
        {
            <table class="table">

                @* table header *@
                <thead>
                <tr>
                    <th></th>
                    <th>id</th>
                    <th>status</th>
                    <th>created</th>
                    <th>length</th>
                    <th>author</th>

                </tr>
                </thead>

                @* table body *@
                <tbody>
                @foreach (var noteListData in _noteListDatas)
                {
                    <tr>
                        <td>@noteListData.Icon</td>
                        <td>@noteListData.Id</td>
                        <td>@noteListData.Status</td>
                        <td>@noteListData.Created</td>
                        <td>@noteListData.Length</td>
                        <td>@noteListData.Author</td>
                    </tr>
                }
                </tbody>

            </table>
        }

        @* footer *@
        <div>
            <button class="btn btn-primary" @onclick="Create">add</button>
            <button class="btn btn-primary" @onclick="Update">refresh</button>
            <div class="search-container">
                <form onsubmit="Search()">
                    <input type="text" placeholder="Search..." id="Search"/>
                    <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i></button>
                </form>
            </div>
        </div>

    </div>

</div>

@code {

    private LoginData _loginData = new LoginData();

    private NoteListData[] _noteListDatas;

    /*  */

    protected override async Task OnInitializedAsync()
    {
        _loginData.Username = await sessionStorage.GetItemAsync<string>("Username");

        await Update();
    }

    private async Task Create()
    {
        NavigationManager.NavigateTo("Audio/audionote");
    }

    private async Task Update()
    {
        try
        {
            var _VerifiedSession = await sessionStorage.GetItemAsync<string>("VerifiedSession");

            VerifiedSession verifiedSession = Newtonsoft.Json.JsonConvert.DeserializeObject<VerifiedSession>(_VerifiedSession);

            //Console.WriteLine("MMNoteList.razor _VerifiedSession: " + verifiedSession);

            var VS_NSQ = new{ VerifiedSession = verifiedSession };

            // http call to get Notes from NoteListController
            var HttpResponse = await HttpClient.PostAsJsonAsync("api/NoteListData/update", VS_NSQ);

            Console.WriteLine("MMNoteList HttpResponse: " + HttpResponse);

            string test1 = HttpResponse.Content.ReadAsStringAsync().Result;

            Console.WriteLine("MMNoteList test1: " + test1);

            List<string> test2 = test1.Split(',').ToList();

            Console.WriteLine("MMNoteList test2: " + test2);

            List<NoteListData> newNoteListDatas = new List<NoteListData>();

            newNoteListDatas.Add(new NoteListData() { Id = test2.IndexOf("id") });
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    //private async Task Search()
    //{
    //    Console.WriteLine("køre den her?");
    //}

}